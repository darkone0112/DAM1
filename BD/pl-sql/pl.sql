/* Introducir datos */
DECLARE
V_DEPTNO_NEXT DEPT.DEPTNO%TYPE;
BEGIN
INSERT INTO DEPT
VALUES('&V_DEPTNO_NEXT', 'PUBLICIDAD', 'MADRID');
END;
SELECT * FROM DEPT;
/* CAMBIAR VALOR MATRICULA CODIGO = 10 */
DECLARE
V_MATRI ALUMNOS.MATRICULA%TYPE :=0;
BEGIN
    IF V_MATRI<12000 THEN
        UPDATE ALUMNOS
        SET MATRICULA=1250
        WHERE COD = 10;
    END IF;
END;
ROLLBACK;
SELECT * FROM ALUMNOS;

/*CURSO RENTABLE*/
CREATE TABLE TEMP(
    COD_CURSO NUMBER(3) PRIMARY KEY,
    ES_RENTA VARCHAR2(15)
);
DECLARE
    V_RENTA NUMBER(7);
    V_CODIGO_CURSO NUMBER(1):=3;
BEGIN
    SELECT SUM(MATRICULA) INTO V_RENTA
    FROM ALUMNOS
    WHERE COD_CURSO=V_CODIGO_CURSO;
    IF V_RENTA > 1000000 THEN
    INSERT INTO TEMP VALUES (V_CODIGO_CURSO,'RENTABLE');
    ELSE
    INSERT INTO TEMP VALUES (V_CODIGO_CURSO,'NO RENTABLE');
    END IF;
END;

SELECT * FROM TEMP;

/* Prueba Examen */
/* 1 */
DECLARE
V_VALOR_A NUMBER(6):= &V_VALOR_A;
V_VALOR_B NUMBER(6):= &V_VALOR_B;
V_RESULTADO NUMBER(12):= (V_VALOR_A + V_VALOR_B);
BEGIN
DBMS_OUTPUT.PUT_LINE(V_RESULTADO);
END;

/* 2 */
DECLARE
V_RADIO NUMBER(6) := &V_RADIO;
V_FORMULA NUMBER(6):= 4/3*3.14*V_RADIO**3; 
BEGIN
DBMS_OUTPUT.PUT_LINE(V_FORMULA);
END;

/* 3 */
DECLARE
V_RADIO NUMBER(6) := &V_RADIO;
V_FORMULA NUMBER(6):= 2*3.14*V_RADIO; 
BEGIN
DBMS_OUTPUT.PUT_LINE(V_FORMULA);
END;

/* 4 */
DECLARE
V_SALAR EMP.SAL%TYPE;
BEGIN
SELECT SAL INTO V_SALAR
FROM EMP
WHERE ENAME LIKE '%KING%';
DBMS_OUTPUT.PUT_LINE('EL SALARIO DE KING ES: ' ||  V_SALAR || '€');
END;

/* 5 */
SELECT * FROM ITEM;
DECLARE
    V_IMPORTE_UNI ITEM.IMPORTE_UNI%TYPE;
    V_PEDIDO ITEM.PEDIDO%TYPE;
BEGIN
    SELECT IMPORTE_UNI INTO V_IMPORTE_UNI
    FROM ITEM
    WHERE PEDIDO = 102;
    SELECT PEDIDO INTO V_PEDIDO
    FROM ITEM
    WHERE PEDIDO = 102;
DBMS_OUTPUT.PUT_LINE('EL IMPORTE UNITARIO DEL PEDIDO: ' ||  V_PEDIDO || ' ES DE: ' || V_IMPORTE_UNI);
END;

/* 6 */
SELECT * FROM EMP;
DECLARE
    V_EMPNO EMP.EMPNO%TYPE :=&V_EMPNO;
    V_NOMBRE EMP.ENAME%TYPE;
BEGIN
    SELECT ENAME INTO V_NOMBRE
    FROM EMP
    WHERE EMPNO = V_EMPNO;
    DBMS_OUTPUT.PUT_LINE('EL NOMBRE DEL EMPLEADO CON NUMERO ' ||  V_EMPNO || ' ES: ' || V_NOMBRE);
END;

/* 7 */
SELECT * FROM DEPT;
DECLARE
    V_SALE DEPT.DNAME%TYPE;
    V_DEPTNO DEPT.DEPTNO%TYPE;
    V_LOC DEPT.LOC%TYPE;
BEGIN
    SELECT DNAME,DEPTNO,LOC INTO V_SALE,V_DEPTNO,V_LOC
    FROM DEPT
    WHERE DNAME LIKE '%SALES%';
    DBMS_OUTPUT.PUT_LINE('EL DEPARTAMENTO ' ||  V_DEPTNO || ' ESTA EN: ' || V_LOC);
END;

/* 8 */
DECLARE
    V_EMPNO EMP.EMPNO%TYPE := 9999;
    V_ENAME EMP.ENAME%TYPE := 'PEREZ';
    V_JOB EMP.JOB%TYPE := 'ANALYST';
    V_DEPTNO EMP.DEPTNO%TYPE := 10;
BEGIN
    INSERT INTO EMP
        (EMPNO,ENAME,JOB,DEPTNO)
    VALUES (V_EMPNO,V_ENAME,V_JOB,V_DEPTNO);
END;

/* 9 */
DECLARE
V_AUMENTAR NUMBER(4) := 2000;
V_DEPTNO DEPT.DEPTNO%TYPE :=10;
BEGIN
Update EMP
  SET SAL=SAL + V_AUMENTAR
WHERE JOB LIKE '%ANALYST%' AND DEPTNO = V_DEPTNO;
END;

/*10*/
SELECT * FROM EMP;
DECLARE
    V_EMPNO EMP.EMPNO%TYPE := &V_EMPNO;
BEGIN
    DELETE FROM EMP
    WHERE EMPNO = V_EMPNO;
END;

/* 11 */
DECLARE
    V_PRODUCTNO ITEM.PRODUCTO_NO%TYPE :=4;
    CURSOR ELCURSOR IS
    SELECT * FROM ITEM
    WHERE PRODUCTO_NO > V_PRODUCTNO;
    TEMPORAL ELCURSOR%ROWTYPE;
BEGIN
    OPEN ELCURSOR;
        DELETE FROM ITEM
        WHERE PRODUCTO_NO > V_PRODUCTNO;
        FETCH ELCURSOR INTO TEMPORAL;
        ELCURSOR%ROWCOUNT;
    CLOSE ELCURSOR;
END;
ROLLBACK;

/* retomando */
DECLARE
V_COD ALUMNOS.COD%TYPE :=&V_COD;
V_NOMBRE ALUMNOS.NOMBRE%TYPE;
BEGIN
SELECT ALUMNOS.NOMBRE INTO V_NOMBRE FROM ALUMNOS
WHERE ALUMNOS.COD=V_COD;
DBMS_OUTPUT.PUT_LINE(V_NOMBRE);
END;

DECLARE
V_NOMBRE ALUMNOS.NOMBRE%TYPE;
V_COD ALUMNOS.COD%TYPE;
V_MATRICULA ALUMNOS.MATRICULA%TYPE;
V_COD_CURSO ALUMNOS.COD_CURSO%TYPE := &V_COD_CURSO;
BEGIN
UPDATE ALUMNOS
SET ALUMNOS.MATRICULA = (SELECT AVG(ALUMNOS.MATRICULA) FROM ALUMNOS)
WHERE MATRICULA <=4000 AND ALUMNOS.COD_CURSO = V_COD_CURSO;
END;
SELECT * FROM ALUMNOS;
ROLLBACK;


/* ESTRUCTURAS DE CONTROL */
DECLARE
V_NOMBRE ALUMNOS.NOMBRE%TYPE;
V_MATRICULA ALUMNOS.MATRICULA%TYPE;
V_COD ALUMNOS.COD%TYPE:=3;
V_MEDIA ALUMNOS.MATRICULA%TYPE;
BEGIN
SELECT AVG(ALUMNOS.MATRICULA)INTO V_MEDIA FROM ALUMNOS;
SELECT ALUMNOS.COD,ALUMNOS.MATRICULA INTO V_COD,V_MATRICULA FROM ALUMNOS
WHERE ALUMNOS.COD = V_COD;
IF V_MATRICULA < V_MEDIA
THEN
SELECT ALUMNOS.NOMBRE INTO V_NOMBRE FROM ALUMNOS
WHERE ALUMNOS.COD = V_COD;
DBMS_OUTPUT.PUT_LINE('POR DEBAJO');
ELSE
DBMS_OUTPUT.PUT_LINE('POR ENCIMA');
END IF;
END;

SELECT * FROM ALUMNOS;
DECLARE
V_NOMBRE ALUMNOS.NOMBRE%TYPE;
V_MATRICULA ALUMNOS.MATRICULA%TYPE;
V_COD_CURSO ALUMNOS.COD_CURSO%TYPE;
V_MEDIA ALUMNOS.MATRICULA%TYPE;
V_I ALUMNOS.COD%TYPE:=1;
V_CODMAX ALUMNOS.COD%TYPE;
BEGIN
SELECT MAX(COD) INTO V_CODMAX FROM ALUMNOS;
SELECT AVG(ALUMNOS.MATRICULA) INTO V_MEDIA FROM ALUMNOS;
LOOP
SELECT ALUMNOS.NOMBRE,ALUMNOS.MATRICULA
INTO V_NOMBRE,V_MATRICULA
FROM ALUMNOS
WHERE ALUMNOS.COD = V_I;
IF V_MATRICULA >= V_MEDIA THEN
DBMS_OUTPUT.PUT_LINE('ALUMNO ' || V_NOMBRE || ' POR ENCIMA DE LA MEDIA' || V_MATRICULA);
ELSE
DBMS_OUTPUT.PUT_LINE('ALUMNO ' || V_NOMBRE || ' POR DEBAJO DE LA MEDIA' || V_MATRICULA);
END IF;
V_I := V_I + 1;
EXIT WHEN V_I > V_CODMAX;
END LOOP;
END;

/* PRACTICAS ESTRUCTURAS DE CONTROL */

/* 1 */
SELECT * FROM EMP;
DECLARE
    V_COD EMP.EMPNO%TYPE := &V_COD;
    V_SAL EMP.SAL%TYPE;
    V_NEWSAL EMP.SAL%TYPE;
BEGIN
    SELECT EMP.SAL INTO V_SAL FROM EMP WHERE EMP.EMPNO = V_COD;
IF V_SAL > 1200 THEN
    Update EMP
    SET EMP.SAL=(SELECT (EMP.SAL+(EMP.SAL*0.20)) 
        FROM EMP WHERE EMP.EMPNO = V_COD)
    WHERE EMP.EMPNO = V_COD;
    SELECT EMP.SAL INTO V_NEWSAL FROM EMP WHERE EMP.EMPNO = V_COD;
END IF;
IF V_SAL < 1200 THEN
    Update EMP
        SET EMP.SAL=(SELECT (EMP.SAL+(EMP.SAL*0.25)) 
        FROM EMP WHERE EMP.EMPNO = V_COD)
    WHERE EMP.EMPNO = V_COD;
    SELECT EMP.SAL INTO V_NEWSAL FROM EMP WHERE EMP.EMPNO = V_COD;
END IF;
    DBMS_OUTPUT.PUT_LINE(V_COD || ' SALARIO ANTIGUO ' || V_SAL || ' SALARIO NUEVO ' || V_NEWSAL );
END;

/* 2 */
SELECT * FROM EMP;
DECLARE
    V_COD EMP.EMPNO%TYPE := &V_COD;
    V_SAL EMP.SAL%TYPE;
    V_COMM EMP.COMM%TYPE;
BEGIN
    SELECT EMP.SAL INTO V_SAL FROM EMP WHERE  EMP.EMPNO = V_COD;
    SELECT EMP.COMM INTO V_COMM FROM EMP WHERE EMP.EMPNO = V_COD;
    DBMS_OUTPUT.PUT_LINE('CODIGO ' || V_COD || ' SALARIO ' || V_SAL || ' COMISION ' || V_COMM);
    IF V_SAL < 1200 THEN
        V_COMM := (V_SAL * 0.10);
        UPDATE EMP
            SET EMP.COMM = V_COMM
        WHERE EMP.EMPNO = V_COD;
    END IF;
    IF V_SAL >=1200 AND V_SAL <= 1800 THEN
        V_COMM := (V_SAL * 0.15);
        UPDATE EMP
            SET EMP.COMM = V_COMM
        WHERE EMP.EMPNO = V_COD;
    END IF;
    IF V_SAL > 1800 THEN
        V_COMM := (V_SAL *0.20);
        UPDATE EMP
            SET EMP.COMM = V_COMM
        WHERE EMP.EMPNO = V_COD;
    END IF;
    DBMS_OUTPUT.PUT_LINE('DATOS ACTUALIZADOS:');
    DBMS_OUTPUT.PUT_LINE('CODIGO ' || V_COD || ' SALARIO ' || V_SAL || ' COMISION ' || V_COMM);
END;
ROLLBACK;

/* 3 */
/* DONDE COÑO */
/* DONDE COÑO ESTA LA TABLA */

/* 4 */
DECLARE
V_X NUMBER := &V_X;
V_N NUMBER := &V_N;
BEGIN
IF V_X > V_N THEN
DBMS_OUTPUT.PUT_LINE('EL NUMERO MAYO ES: ' || V_X);
ELSE DBMS_OUTPUT.PUT_LINE('EL NUMERO MAYO ES: ' || V_N);
END IF;
END;

/* 5 */
DECLARE
    V_N NUMBER := &V_N;
    V_CIFRAS NUMBER := 1;
BEGIN
DBMS_OUTPUT.PUT_LINE(V_N || ' TIENE ');
    WHILE V_N > 9 LOOP
        V_N := TRUNC(V_N/10);
        V_CIFRAS := V_CIFRAS + 1;
    END LOOP;
DBMS_OUTPUT.PUT_LINE(V_CIFRAS || ' CIFRAS');
END;

/* 6 */
DECLARE
V_NUM NUMBER := &V_NUM;
V_I NUMBER := 1;
V_RESULTADO NUMBER := 1;
BEGIN
WHILE V_I <= V_NUM LOOP
V_RESULTADO := V_RESULTADO * (V_I);
V_I := V_I +1;
END LOOP;
DBMS_OUTPUT.PUT_LINE(V_NUM || '!=' ||V_RESULTADO);
END;

/*SALTO DE DOCUMENTO ESTOS SON SOLOS OPERACIONES ARITMETICAS*/

/* CURSORES */
/* DECLARE
CURSOR MATRI IS
    SELECT ALUMNOS.MATRICULA, ALUMNOS.NOMBRE FROM ALUMNOS;
TEMPORAL MATRI%ROWTYPE;
VAR1 ALUMNOS.MATRICULA%TYPE;
VAR2 ALUMNOS.MATRICULA%TYPE;
BEGIN
    OPEN MATRI;
    LOOP
        FETCH MATRI INTO TEMPORAL;
        EXIT WHEN MATRI%NOTFOUND;
        IF TEMPORAL.NOMBRE IS NULL THEN
            VAR1 := VAR1 + MATRI.MATRICULA;
        ELSE
            VAR2 := VAR2 + MATRI.MATRICUAL;
        END IF;
    END LOOP;
    INSERT INTO TEMP(COL1,COL2) VALUES (VAR1,VAR2);
    CLOSE MATRI;
END; */

-- Create a new relational table with 3 columns

/* TABLA DE PRUEBA */
CREATE TABLE OTRA
(
  ENAME VARCHAR2(80) NOT NULL,
  SAL NUMBER(5)
);
INSERT INTO OTRA VALUES('PROBANDO', 2000);
ROLLBACK;
/*  */
DECLARE
    CURSOR EMP_CURSOR IS
    SELECT EMP.ENAME,EMP.SAL FROM EMP WHERE SAL IS NOT NULL
    ORDER BY SAL DESC;
    V_ENAME EMP.ENAME%TYPE;
    V_SAL EMP.SAL%TYPE;
    V_COD NUMBER(3):=&V_COD;
BEGIN
    OPEN EMP_CURSOR;
    FETCH EMP_CURSOR INTO V_ENAME,V_SAL;
    WHILE (EMP_CURSOR%ROWCOUNT <= V_COD) AND EMP_CURSOR%FOUND LOOP
    INSERT INTO OTRA VALUES (V_ENAME,V_SAL);
    FETCH EMP_CURSOR INTO V_ENAME,V_SAL;
    END LOOP;
    CLOSE EMP_CURSOR;
END;
SELECT * FROM OTRA;

/* 2 */
DECLARE
V_DEPTNO EMP.DEPTNO%TYPE :=&V_DEPTNO;
    CURSOR EMP_CURSOR IS
        SELECT EMP.ENAME, EMP.DEPTNO FROM EMP
V_ENAME EMP.ENAME%TYPE;
BEGIN
    OPEN EMP_CURSOR;
    FETCH EMP_CURSOR INTO V_ENAME;
END;

/* REGISTROS */
DECLARE
    TYPE REG_ALUMNOS IS RECORD(NOM_ALUMNO VARCHAR2(25),NUM_MATRI NUMBER(7,2),CODIGO NUMBER(3));
    ALUMNO REG_ALUMNO;
BEGIN   

END;    

-- Create a new relational table with 3 columns

CREATE TABLE MENOL 
(
  ENAME VARCHAR2(255) NOT NULL,
  EDUARDO NUMBER(6)
);
/*Ejercicios 456 */
DECLARE
    CURSOR CURSOR_EMP IS
    SELECT * FROM EMP
    ORDER BY EMP.SAL ASC;
    V_CANTIDAD NUMBER(3) := &V_CANTIDAD;
    V_ENAME EMP.ENAME%TYPE;
    V_SAL EMP.SAL%TYPE;
    REG CURSOR_EMP%ROWTYPE;
BEGIN
    OPEN CURSOR_EMP;
    FETCH CURSOR_EMP INTO REG;
    WHILE (CURSOR_EMP%FOUND AND CURSOR_EMP%ROWCOUNT <= V_CANTIDAD) LOOP
        /* DBMS_OUTPUT.PUT_LINE(REG.ENAME || ' ' || REG.SAL); */
        INSERT INTO MENOL VALUES(REG.ENAME,REG.SAL);
        IF (((SYSDATE - EMP.HIREDATE)/365)>25) AND COMM IS NOT NULL;
            -- Update rows in a Table
            Update EMP
              SET EMP.COMM=EMP.COMM + (EMP.COMM*0.10),
        END IF; 
    FETCH CURSOR_EMP INTO REG;
    END LOOP;
END;
SELECT * FROM EMP;
SELECT * FROM MENOL;

DECLARE
    V_DEPTNO TEMPLE.NUMDE%TYPE := &V_DEPTNO;
    CURSOR C1 IS SELECT * FROM TEMPLE
    WHERE NUMDE = V_DEPTNO;
    REG C1%ROWTYPE;
BEGIN
    OPEN C1;
    FETCH C1 INTO REG;
    WHILE (C1%FOUND) LOOP
    DBMS_OUTPUT.PUT_LINE(REG.NOMEM);
    FETCH C1 INTO REG;
    END LOOP;
END;
SELECT * FROM TEMPLE;



W